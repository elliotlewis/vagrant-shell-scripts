# -*- mode: ruby -*-
# vi: set ft=ruby :

require File.join(File.dirname(__FILE__), 'vagrant-shell-scripts/vagrant')

Vagrant.configure(2) do |config|

    # Box.
    config.vm.box = "ubuntu/trusty32"

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    # config.vm.network "forwarded_port", guest: 80, host: 8080

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    config.vm.network "private_network", ip: "192.168.33.20"

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    config.vm.synced_folder "www", "/vagrant", id: "vagrant-root", :owner => "www-data", :group => "www-data"

    # VirtualBox:
    config.vm.provider "virtualbox" do |vb|
     # Display the VirtualBox GUI when booting the machine
     #vb.gui = true

     # Customize the amount of memory on the VM:
     vb.memory = "512"
    end

    # if bash_custom exits copy to VM for custom shell
    if File.exist?('.bash_custom')
        config.vm.provision "file", source: ".bash_custom", destination: ".bash_custom"
    end
    
    # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
    # such as FTP and Heroku are also available. See the documentation at
    # https://docs.vagrantup.com/v2/push/atlas.html for more information.
    # config.push.define "atlas" do |push|
    #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
    # end

    # Clever rb loop to load in all sh files so vailable to provisioning script
    config.vm.provision :shell do |shell|
    vagrant_shell_scripts_configure(
      shell,
      File.dirname(__FILE__),
      'bootstrap.sh'
    )
    end

end
